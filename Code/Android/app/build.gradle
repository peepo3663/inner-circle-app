apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'org.jetbrains.dokka'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        releaseSigningConfig {
            storeFile rootProject.file("app/inner_circle.jks")
            storePassword System.getenv("APPCENTER_KEYSTORE_PASSWORD")
//            storePassword "123451"
            keyAlias System.getenv("APPCENTER_KEY_ALIAS")
//             keyAlias "inner_circle"
            keyPassword System.getenv("APPCENTER_KEY_PASSWORD")
//             keyPassword "123451"
        }
    }

    defaultConfig {
        applicationId "edu.bu.metcs673.project"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 8
        versionName "1.0.6"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", 'SERVER_URL', '"http://192.168.0.3:8080"'
//            buildConfigField "String", 'SERVER_URL', '"http://ec2-3-131-141-53.us-east-2.compute.amazonaws.com:8080"'
        }
        release {
            buildConfigField "String", 'SERVER_URL', '"http://ec2-3-131-141-53.us-east-2.compute.amazonaws.com:8080"'
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseSigningConfig
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        reportDir "$rootDir/test-reports"
        resultsDir "$rootDir/test-results"
    }
}

dependencies {
   implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
    implementation 'com.google.firebase:firebase-database-ktx:19.5.0'
    testImplementation 'junit:junit:4.12'
    // testImplementation 'org.junit.jupiter:junit-jupiter'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test:rules:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.1.0'
    // Optional -- UI testing with UI Automator
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'


    implementation "com.google.firebase:firebase-core:$rootProject.ext.firebaseCoreVersion"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:25.12.0')

    // Declare the dependency for the Firebase Authentication library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation "com.google.firebase:firebase-auth:$rootProject.ext.firebaseAuthVersion"

    // Declare the dependency for the Cloud Firestore library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation "com.google.firebase:firebase-firestore-ktx:$rootProject.ext.firebaseFirestoreVersion"

    // Also declare the dependency for the Google Play services library and specify its version
    implementation "com.google.android.gms:play-services-auth:$rootProject.ext.firebaseAuthVersion"

    // firebase notification
    implementation "com.google.firebase:firebase-messaging:$rootProject.ext.firebaseMessagingVersion"

    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"

    implementation "com.microsoft.appcenter:appcenter-analytics:$rootProject.ext.appCenterSdkVersion"
    implementation "com.microsoft.appcenter:appcenter-crashes:$rootProject.ext.appCenterSdkVersion"

    //dagger dependency
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerVersion"

    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

    //retrofit dependency
    implementation "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.ext.gsonConvertorVersion"
}

dokkaHtml.configure {
    // outputDirectory.set(buildDir.resolve("dokka"))
    dokkaSourceSets {
        named("main") {
            noAndroidSdkLink.set(false)
        }
    }
}